#!/bin/bash
# Helper script to provision a Kubernetes ConfigMap
# from dynamic values, specifically the external IPs
# of the loadbalancers.
set -e
set -u
set -o pipefail

# We have a total of two pods to operate on.
# We'll generate config maps of the external IPs
# for each pod, so they can reuse the value.
for n in 1 2
do
    # Define target service and configmap names.
    svc="tor-relay-lb-${n}"
    cm="tor-relay-config-${n}"

    # Fetch external IP via API lookup.
    # The external IP won't be immediately available if the LBs
    # were just created, so poll for a defined value for external IP.
    external_ip=""
    while test -z "${external_ip}"
    do
        external_ip="$(kubectl get service "$svc" --output jsonpath='{@.status.loadBalancer.ingress[0].ip}')"
        if [[ -z "${external_ip}" ]]
        then
            echo "Waiting for external IP for load balancer..."
            sleep 30
        fi
    done

    # Managing configmaps with kubectl is not idempotent.
    # If there's an error on create, we'll assume it's already there,
    # and update it in-place.
    kubectl create configmap "$cm" --from-literal="RELAY_ADDRESS=${external_ip}" || \
        kubectl create configmap "$cm" --from-literal="RELAY_ADDRESS=${external_ip}" \
        --dry-run --output yaml \
        | kubectl replace -f -
done
